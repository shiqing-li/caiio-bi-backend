<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yupi.springbootinit.mapper.ChartMapper">

    <resultMap id="BaseResultMap" type="com.yupi.springbootinit.model.entity.Chart">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="goal" column="goal" jdbcType="VARCHAR"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="chartData" column="chartData" jdbcType="VARCHAR"/>
            <result property="chartType" column="chartType" jdbcType="VARCHAR"/>
            <result property="genChart" column="genChart" jdbcType="VARCHAR"/>
            <result property="genResult" column="genResult" jdbcType="VARCHAR"/>
            <result property="status" column="status" jdbcType="VARCHAR"/>
            <result property="execMessage" column="execMessage" jdbcType="VARCHAR"/>
            <result property="userId" column="userId" jdbcType="BIGINT"/>
            <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
            <result property="isDelete" column="isDelete" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,goal,`name`,chartData,status,execMessage
        chartType,genChart,genResult,
        userId,createTime,updateTime,
        isDelete
    </sql>

    <!--
    queryChartData是唯一标识符，
    parameterType是查询语句的参数类型
    resultType是查询结果的返回类型
    select * from chart_#{cahrtId}不够灵活，${querySql} 是最灵活的方式，
    就是把sql语句完全交给程序去做，有一定的风险
    一旦使用 $ 符号，就有sql 注入的风险
        -->
    <select id="queryChartData" parameterType="string" resultType="map">
        ${querySql}
    </select>
</mapper>
